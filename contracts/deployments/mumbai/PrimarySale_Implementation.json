{
  "address": "0xb189BBE55a88f306e3Fd90089eb6236BF40d2463",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "AdminAccessSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedERC20Tokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "create",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nft721_address",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "listings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sales",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endAt",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "listingIndex",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "setAdminAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "trustedForwarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x8acda3016773bc38e32a82c6422b742065cce63aa3817b2504a3c4539e2776fb",
  "receipt": {
    "to": null,
    "from": "0x7a783DCE34B58055610E87B373cD97F26B45B1D9",
    "contractAddress": "0xb189BBE55a88f306e3Fd90089eb6236BF40d2463",
    "transactionIndex": 58,
    "gasUsed": "2077430",
    "logsBloom": "0x
    "blockHash": "0x3bb9cf1366491f2da07fde5bbf75e8413d21e2db30e69f5efc1751c1a5392bc6",
    "transactionHash": "0x8acda3016773bc38e32a82c6422b742065cce63aa3817b2504a3c4539e2776fb",
    "logs": [
      {
        "transactionIndex": 58,
        "blockNumber": 25521655,
        "transactionHash": "0x8acda3016773bc38e32a82c6422b742065cce63aa3817b2504a3c4539e2776fb",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000007a783dce34b58055610e87b373cd97f26b45b1d9",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x000000000000000000000000000000000000000000000000001273499bcfe40e00000000000000000000000000000000000000000000000006c91f6c67835a000000000000000000000000000000000000000000000007d135bf6ed734f42db500000000000000000000000000000000000000000000000006b6ac22cbb375f20000000000000000000000000000000000000000000007d135d1e220d0c411c3",
        "logIndex": 282,
        "blockHash": "0x3bb9cf1366491f2da07fde5bbf75e8413d21e2db30e69f5efc1751c1a5392bc6"
      }
    ],
    "blockNumber": 25521655,
    "cumulativeGasUsed": "10669298",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "224e6372b8e14a856454548575543032",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"AdminAccessSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedERC20Tokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nft721_address\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sales\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"listingIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setAdminAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Sale.sol\":\"PrimarySale\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721ReceiverUpgradeable {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x2f359f9d5c56394e60d74401487ab55d8ef0012907b07c9abbb8f998bf5ddfec\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/utils/ERC721Holder.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721ReceiverUpgradeable.sol\\\";\\nimport \\\"../../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC721Receiver} interface.\\n *\\n * Accepts all token transfers.\\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\\n */\\ncontract ERC721HolderUpgradeable is Initializable, IERC721ReceiverUpgradeable {\\n    function __ERC721Holder_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC721Holder_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev See {IERC721Receiver-onERC721Received}.\\n     *\\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address,\\n        address,\\n        uint256,\\n        bytes memory\\n    ) public virtual override returns (bytes4) {\\n        return this.onERC721Received.selector;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb7f90ab8af7dae0bd4acfa088f9e606ea039110face097ca7c8beef563f71e90\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"src/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\nimport './BaseRelayRecipient.sol';\\n\\ncontract AccessControl is OwnableUpgradeable, BaseRelayRecipient {\\n\\tmapping(address => bool) private _admins;\\n\\tevent AdminAccessSet(address admin, bool enabled);\\n\\n\\tfunction setAdminAccess(address admin, bool enabled) public onlyOwner {\\n\\t\\t_admins[admin] = enabled;\\n\\t\\temit AdminAccessSet(admin, enabled);\\n\\t}\\n\\n\\tfunction isAdmin(address admin) public view returns (bool) {\\n\\t\\treturn _admins[admin] || admin == owner();\\n\\t}\\n\\n\\tmodifier onlyAdmin() {\\n\\t\\trequire(isAdmin(_msgSender()), 'Caller is not admin');\\n\\t\\t_;\\n\\t}\\n\\n\\t/**\\n\\t * return the sender of this call.\\n\\t * if the call came through our trusted forwarder, return the original sender.\\n\\t * otherwise, return `msg.sender`.\\n\\t * should be used in the contract anywhere instead of msg.sender\\n\\t */\\n\\tfunction _msgSender()\\n\\t\\tinternal\\n\\t\\tview\\n\\t\\tvirtual\\n\\t\\toverride(BaseRelayRecipient, ContextUpgradeable)\\n\\t\\treturns (address ret)\\n\\t{\\n\\t\\treturn BaseRelayRecipient._msgSender();\\n\\t}\\n}\\n\",\"keccak256\":\"0x287ea1f752006caa987f06affab146a9d6fde00a5bcb861b57d2889b2019a6e8\",\"license\":\"MIT\"},\"src/BaseRelayRecipient.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\npragma solidity ^0.8.6;\\n\\n/**\\n * A base contract to be inherited by any contract that want to receive relayed transactions\\n * A subclass must use \\\"_msgSender()\\\" instead of \\\"msg.sender\\\"\\n */\\nabstract contract BaseRelayRecipient {\\n\\t/*\\n\\t * Forwarder singleton we accept calls from\\n\\t */\\n\\taddress public trustedForwarder;\\n\\n\\t/*\\n\\t * require a function to be called through GSN only\\n\\t */\\n\\tmodifier trustedForwarderOnly() {\\n\\t\\trequire(\\n\\t\\t\\tmsg.sender == address(trustedForwarder),\\n\\t\\t\\t'Function can only be called through the trusted Forwarder'\\n\\t\\t);\\n\\t\\t_;\\n\\t}\\n\\n\\tfunction isTrustedForwarder(address forwarder) public view returns (bool) {\\n\\t\\treturn forwarder == trustedForwarder;\\n\\t}\\n\\n\\t/**\\n\\t * return the sender of this call.\\n\\t * if the call came through our trusted forwarder, return the original sender.\\n\\t * otherwise, return `msg.sender`.\\n\\t * should be used in the contract anywhere instead of msg.sender\\n\\t */\\n\\tfunction _msgSender() internal view virtual returns (address ret) {\\n\\t\\tif (msg.data.length >= 24 && isTrustedForwarder(msg.sender)) {\\n\\t\\t\\t// At this point we know that the sender is a trusted forwarder,\\n\\t\\t\\t// so we trust that the last bytes of msg.data are the verified sender address.\\n\\t\\t\\t// extract sender address from the end of msg.data\\n\\t\\t\\tassembly {\\n\\t\\t\\t\\tret := shr(96, calldataload(sub(calldatasize(), 20)))\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\treturn msg.sender;\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0xef77d422f8c7882600502a0d1fde5ecd412aa7d61de4449a9cc985c72c42e3cf\",\"license\":\"MIT\"},\"src/Sale.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\nimport '@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol';\\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\\nimport './AccessControl.sol';\\nimport './interfaces/IBeMetaPlace.sol';\\n\\ncontract PrimarySale is AccessControl, ERC721HolderUpgradeable {\\n\\tusing SafeERC20 for IERC20;\\n\\tIBeMetaPlace nft721;\\n\\n\\tmapping(address => bool) public allowedERC20Tokens;\\n\\n\\tstruct Sale {\\n\\t\\tuint256 price;\\n\\t\\tuint256 startAt;\\n\\t\\tuint256 endAt;\\n\\t\\taddress tokenAddress;\\n\\t\\taddress seller;\\n\\t\\tuint256 listingIndex;\\n\\t}\\n\\n\\tmapping(uint256 => Sale) public sales;\\n\\tmapping(address => uint256[]) public listings;\\n\\n\\tfunction initialize(address _nft721_address) public initializer {\\n\\t\\t__ERC721Holder_init();\\n\\t\\t__Ownable_init();\\n\\n\\t\\tnft721 = IBeMetaPlace(_nft721_address);\\n\\t}\\n\\n\\tfunction create(\\n\\t\\tstring memory _uri,\\n\\t\\taddress tokenAddress,\\n\\t\\tuint256 duration,\\n\\t\\tuint256 price\\n\\t) external onlyAdmin {\\n\\t\\trequire(allowedERC20Tokens[tokenAddress], 'Not allowed token');\\n\\n\\t\\tuint256 _tokenId = nft721.mint(_msgSender(), _uri);\\n\\n\\t\\tlistings[_msgSender()].push(_tokenId);\\n\\n\\t\\tsales[_tokenId] = Sale({\\n\\t\\t\\tprice: price,\\n\\t\\t\\tstartAt: block.timestamp,\\n\\t\\t\\tendAt: block.timestamp + duration,\\n\\t\\t\\ttokenAddress: tokenAddress,\\n\\t\\t\\tseller: _msgSender(),\\n\\t\\t\\tlistingIndex: listings[_msgSender()].length - 1\\n\\t\\t});\\n\\t}\\n\\n\\tfunction buy(uint256 _tokenId) external {\\n\\t\\tSale memory sale = sales[_tokenId];\\n\\n\\t\\trequire(sale.startAt <= block.timestamp, 'Sale has not started yet.');\\n\\t\\trequire(sale.endAt >= block.timestamp, 'Sale has already ended.');\\n\\n\\t\\tdelete sales[_tokenId];\\n\\n\\t\\tIERC20(sale.tokenAddress).safeTransferFrom(\\n\\t\\t\\t_msgSender(),\\n\\t\\t\\tsale.seller,\\n\\t\\t\\tsale.price\\n\\t\\t);\\n\\n\\t\\tIERC721(address(nft721)).safeTransferFrom(\\n\\t\\t\\tsale.seller,\\n\\t\\t\\t_msgSender(),\\n\\t\\t\\t_tokenId\\n\\t\\t);\\n\\t\\t// swap with last and delete\\n\\t\\tuint256 lastValue = listings[sale.seller][listings[sale.seller].length - 1];\\n\\t\\tlistings[sale.seller][sale.listingIndex] = lastValue;\\n\\t\\tlistings[sale.seller].pop();\\n\\t}\\n\\n\\tuint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x2cae86044ee02a76b7670bf51eaee277221142f97d3e8197a248d68e1b199cf3\",\"license\":\"MIT\"},\"src/interfaces/IBeMetaPlace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\ninterface IBeMetaPlace {\\n\\tfunction mint(address to_, string memory tokenURI_)\\n\\t\\texternal\\n\\t\\treturns (uint256 _tokenId);\\n\\n\\tfunction setTokenURI(uint256 tokenId, string memory _tokenURI) external;\\n}\\n\",\"keccak256\":\"0x19f8df0fe899d8329cdded248e0dd981648dc33eb8ead217a3dc750dd2132563\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506124cb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100e95760003560e01c8063acb4ad8d1161008c578063d83408e211610066578063d83408e214610261578063d96a094a14610291578063f2fde38b146102ad578063f65a0b3e146102c9576100e9565b8063acb4ad8d146101f4578063b5f522f714610210578063c4d66de814610245576100e9565b8063572b6c05116100c8578063572b6c051461017e578063715018a6146101ae5780637da0a877146101b85780638da5cb5b146101d6576100e9565b806207df30146100ee578063150b7a021461011e57806324d7806c1461014e575b600080fd5b6101086004803603810190610103919061185d565b6102e5565b6040516101159190611e48565b60405180910390f35b6101386004803603810190610133919061179a565b610316565b6040516101459190611cab565b60405180910390f35b6101686004803603810190610163919061176d565b61032a565b6040516101759190611c90565b60405180910390f35b6101986004803603810190610193919061176d565b6103bd565b6040516101a59190611c90565b60405180910390f35b6101b6610417565b005b6101c061049f565b6040516101cd9190611be5565b60405180910390f35b6101de6104c5565b6040516101eb9190611be5565b60405180910390f35b61020e600480360381019061020991906118ca565b6104ef565b005b61022a6004803603810190610225919061194d565b610884565b60405161023c96959493929190611e63565b60405180910390f35b61025f600480360381019061025a919061176d565b610900565b005b61027b6004803603810190610276919061176d565b610a36565b6040516102889190611c90565b60405180910390f35b6102ab60048036038101906102a6919061194d565b610a56565b005b6102c760048036038101906102c2919061176d565b610ec6565b005b6102e360048036038101906102de919061181d565b610fbe565b005b609c602052816000526040600020818154811061030157600080fd5b90600052602060002001600091509150505481565b600063150b7a0260e01b9050949350505050565b6000606660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16806103b657506103876104c5565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b9050919050565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b61041f6110ce565b73ffffffffffffffffffffffffffffffffffffffff1661043d6104c5565b73ffffffffffffffffffffffffffffffffffffffff1614610493576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048a90611d68565b60405180910390fd5b61049d60006110dd565b565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104ff6104fa6110ce565b61032a565b61053e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053590611da8565b60405180910390fd5b609a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166105ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c190611d08565b60405180910390fd5b6000609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0def5216106126110ce565b876040518363ffffffff1660e01b8152600401610630929190611c60565b602060405180830381600087803b15801561064a57600080fd5b505af115801561065e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610682919061197a565b9050609c60006106906110ce565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150556040518060c0016040528083815260200142815260200184426107149190611f7d565b81526020018573ffffffffffffffffffffffffffffffffffffffff16815260200161073d6110ce565b73ffffffffffffffffffffffffffffffffffffffff1681526020016001609c60006107666110ce565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506107ae9190611fd3565b815250609b600083815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a082015181600501559050505050505050565b609b6020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154905086565b600060019054906101000a900460ff166109285760008054906101000a900460ff1615610931565b6109306111a3565b5b610970576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096790611d48565b60405180910390fd5b60008060019054906101000a900460ff1615905080156109c0576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6109c86111b4565b6109d0611205565b81609960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610a325760008060016101000a81548160ff0219169083151502179055505b5050565b609a6020528060005260406000206000915054906101000a900460ff1681565b6000609b60008381526020019081526020016000206040518060c00160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152505090504281602001511115610b93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8a90611d88565b60405180910390fd5b4281604001511015610bda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd190611dc8565b60405180910390fd5b609b6000838152602001908152602001600020600080820160009055600182016000905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090555050610c9e610c696110ce565b82608001518360000151846060015173ffffffffffffffffffffffffffffffffffffffff1661125e909392919063ffffffff16565b609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e8260800151610ce96110ce565b856040518463ffffffff1660e01b8152600401610d0893929190611c00565b600060405180830381600087803b158015610d2257600080fd5b505af1158015610d36573d6000803e3d6000fd5b505050506000609c6000836080015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001609c6000856080015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050610dd29190611fd3565b81548110610de357610de261214c565b5b9060005260206000200154905080609c6000846080015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208360a0015181548110610e4a57610e4961214c565b5b9060005260206000200181905550609c6000836080015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480610eab57610eaa61211d565b5b60019003818190600052602060002001600090559055505050565b610ece6110ce565b73ffffffffffffffffffffffffffffffffffffffff16610eec6104c5565b73ffffffffffffffffffffffffffffffffffffffff1614610f42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3990611d68565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610fb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa990611ce8565b60405180910390fd5b610fbb816110dd565b50565b610fc66110ce565b73ffffffffffffffffffffffffffffffffffffffff16610fe46104c5565b73ffffffffffffffffffffffffffffffffffffffff161461103a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103190611d68565b60405180910390fd5b80606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fe529461c8529abc0e0fe7c5ee361f74fe22e0b7574df1fc0b7558a282091fb7882826040516110c2929190611c37565b60405180910390a15050565b60006110d86112e7565b905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006111ae30611323565b15905090565b600060019054906101000a900460ff16611203576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111fa90611e08565b60405180910390fd5b565b600060019054906101000a900460ff16611254576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124b90611e08565b60405180910390fd5b61125c611346565b565b6112e1846323b872dd60e01b85858560405160240161127f93929190611c00565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506113a7565b50505050565b600060186000369050101580156113035750611302336103bd565b5b1561131757601436033560601c905061131f565b339050611320565b5b90565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16611395576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138c90611e08565b60405180910390fd5b6113a56113a06110ce565b6110dd565b565b6000611409826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661146e9092919063ffffffff16565b90506000815111156114695780806020019051810190611429919061189d565b611468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145f90611e28565b60405180910390fd5b5b505050565b606061147d8484600085611486565b90509392505050565b6060824710156114cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c290611d28565b60405180910390fd5b6114d48561159a565b611513576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150a90611de8565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161153c9190611bce565b60006040518083038185875af1925050503d8060008114611579576040519150601f19603f3d011682016040523d82523d6000602084013e61157e565b606091505b509150915061158e8282866115bd565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b606083156115cd5782905061161d565b6000835111156115e05782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116149190611cc6565b60405180910390fd5b9392505050565b600061163761163284611ee9565b611ec4565b905082815260208101848484011115611653576116526121af565b5b61165e84828561207b565b509392505050565b600061167961167484611f1a565b611ec4565b905082815260208101848484011115611695576116946121af565b5b6116a084828561207b565b509392505050565b6000813590506116b781612450565b92915050565b6000813590506116cc81612467565b92915050565b6000815190506116e181612467565b92915050565b600082601f8301126116fc576116fb6121aa565b5b813561170c848260208601611624565b91505092915050565b600082601f83011261172a576117296121aa565b5b813561173a848260208601611666565b91505092915050565b6000813590506117528161247e565b92915050565b6000815190506117678161247e565b92915050565b600060208284031215611783576117826121b9565b5b6000611791848285016116a8565b91505092915050565b600080600080608085870312156117b4576117b36121b9565b5b60006117c2878288016116a8565b94505060206117d3878288016116a8565b93505060406117e487828801611743565b925050606085013567ffffffffffffffff811115611805576118046121b4565b5b611811878288016116e7565b91505092959194509250565b60008060408385031215611834576118336121b9565b5b6000611842858286016116a8565b9250506020611853858286016116bd565b9150509250929050565b60008060408385031215611874576118736121b9565b5b6000611882858286016116a8565b925050602061189385828601611743565b9150509250929050565b6000602082840312156118b3576118b26121b9565b5b60006118c1848285016116d2565b91505092915050565b600080600080608085870312156118e4576118e36121b9565b5b600085013567ffffffffffffffff811115611902576119016121b4565b5b61190e87828801611715565b945050602061191f878288016116a8565b935050604061193087828801611743565b925050606061194187828801611743565b91505092959194509250565b600060208284031215611963576119626121b9565b5b600061197184828501611743565b91505092915050565b6000602082840312156119905761198f6121b9565b5b600061199e84828501611758565b91505092915050565b6119b081612007565b82525050565b6119bf81612019565b82525050565b6119ce81612025565b82525050565b60006119df82611f4b565b6119e98185611f61565b93506119f981856020860161208a565b80840191505092915050565b6000611a1082611f56565b611a1a8185611f6c565b9350611a2a81856020860161208a565b611a33816121be565b840191505092915050565b6000611a4b602683611f6c565b9150611a56826121cf565b604082019050919050565b6000611a6e601183611f6c565b9150611a798261221e565b602082019050919050565b6000611a91602683611f6c565b9150611a9c82612247565b604082019050919050565b6000611ab4602e83611f6c565b9150611abf82612296565b604082019050919050565b6000611ad7602083611f6c565b9150611ae2826122e5565b602082019050919050565b6000611afa601983611f6c565b9150611b058261230e565b602082019050919050565b6000611b1d601383611f6c565b9150611b2882612337565b602082019050919050565b6000611b40601783611f6c565b9150611b4b82612360565b602082019050919050565b6000611b63601d83611f6c565b9150611b6e82612389565b602082019050919050565b6000611b86602b83611f6c565b9150611b91826123b2565b604082019050919050565b6000611ba9602a83611f6c565b9150611bb482612401565b604082019050919050565b611bc881612071565b82525050565b6000611bda82846119d4565b915081905092915050565b6000602082019050611bfa60008301846119a7565b92915050565b6000606082019050611c1560008301866119a7565b611c2260208301856119a7565b611c2f6040830184611bbf565b949350505050565b6000604082019050611c4c60008301856119a7565b611c5960208301846119b6565b9392505050565b6000604082019050611c7560008301856119a7565b8181036020830152611c878184611a05565b90509392505050565b6000602082019050611ca560008301846119b6565b92915050565b6000602082019050611cc060008301846119c5565b92915050565b60006020820190508181036000830152611ce08184611a05565b905092915050565b60006020820190508181036000830152611d0181611a3e565b9050919050565b60006020820190508181036000830152611d2181611a61565b9050919050565b60006020820190508181036000830152611d4181611a84565b9050919050565b60006020820190508181036000830152611d6181611aa7565b9050919050565b60006020820190508181036000830152611d8181611aca565b9050919050565b60006020820190508181036000830152611da181611aed565b9050919050565b60006020820190508181036000830152611dc181611b10565b9050919050565b60006020820190508181036000830152611de181611b33565b9050919050565b60006020820190508181036000830152611e0181611b56565b9050919050565b60006020820190508181036000830152611e2181611b79565b9050919050565b60006020820190508181036000830152611e4181611b9c565b9050919050565b6000602082019050611e5d6000830184611bbf565b92915050565b600060c082019050611e786000830189611bbf565b611e856020830188611bbf565b611e926040830187611bbf565b611e9f60608301866119a7565b611eac60808301856119a7565b611eb960a0830184611bbf565b979650505050505050565b6000611ece611edf565b9050611eda82826120bd565b919050565b6000604051905090565b600067ffffffffffffffff821115611f0457611f0361217b565b5b611f0d826121be565b9050602081019050919050565b600067ffffffffffffffff821115611f3557611f3461217b565b5b611f3e826121be565b9050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000611f8882612071565b9150611f9383612071565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611fc857611fc76120ee565b5b828201905092915050565b6000611fde82612071565b9150611fe983612071565b925082821015611ffc57611ffb6120ee565b5b828203905092915050565b600061201282612051565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156120a857808201518184015260208101905061208d565b838111156120b7576000848401525b50505050565b6120c6826121be565b810181811067ffffffffffffffff821117156120e5576120e461217b565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420616c6c6f77656420746f6b656e000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f53616c6520686173206e6f742073746172746564207965742e00000000000000600082015250565b7f43616c6c6572206973206e6f742061646d696e00000000000000000000000000600082015250565b7f53616c652068617320616c726561647920656e6465642e000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b61245981612007565b811461246457600080fd5b50565b61247081612019565b811461247b57600080fd5b50565b61248781612071565b811461249257600080fd5b5056fea2646970667358221220870f493152a3fc93d8b2739b6ab2b42acd9f8c112f21c278dd5059f2b9303c6b64736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100e95760003560e01c8063acb4ad8d1161008c578063d83408e211610066578063d83408e214610261578063d96a094a14610291578063f2fde38b146102ad578063f65a0b3e146102c9576100e9565b8063acb4ad8d146101f4578063b5f522f714610210578063c4d66de814610245576100e9565b8063572b6c05116100c8578063572b6c051461017e578063715018a6146101ae5780637da0a877146101b85780638da5cb5b146101d6576100e9565b806207df30146100ee578063150b7a021461011e57806324d7806c1461014e575b600080fd5b6101086004803603810190610103919061185d565b6102e5565b6040516101159190611e48565b60405180910390f35b6101386004803603810190610133919061179a565b610316565b6040516101459190611cab565b60405180910390f35b6101686004803603810190610163919061176d565b61032a565b6040516101759190611c90565b60405180910390f35b6101986004803603810190610193919061176d565b6103bd565b6040516101a59190611c90565b60405180910390f35b6101b6610417565b005b6101c061049f565b6040516101cd9190611be5565b60405180910390f35b6101de6104c5565b6040516101eb9190611be5565b60405180910390f35b61020e600480360381019061020991906118ca565b6104ef565b005b61022a6004803603810190610225919061194d565b610884565b60405161023c96959493929190611e63565b60405180910390f35b61025f600480360381019061025a919061176d565b610900565b005b61027b6004803603810190610276919061176d565b610a36565b6040516102889190611c90565b60405180910390f35b6102ab60048036038101906102a6919061194d565b610a56565b005b6102c760048036038101906102c2919061176d565b610ec6565b005b6102e360048036038101906102de919061181d565b610fbe565b005b609c602052816000526040600020818154811061030157600080fd5b90600052602060002001600091509150505481565b600063150b7a0260e01b9050949350505050565b6000606660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16806103b657506103876104c5565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b9050919050565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b61041f6110ce565b73ffffffffffffffffffffffffffffffffffffffff1661043d6104c5565b73ffffffffffffffffffffffffffffffffffffffff1614610493576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048a90611d68565b60405180910390fd5b61049d60006110dd565b565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104ff6104fa6110ce565b61032a565b61053e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053590611da8565b60405180910390fd5b609a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166105ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c190611d08565b60405180910390fd5b6000609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0def5216106126110ce565b876040518363ffffffff1660e01b8152600401610630929190611c60565b602060405180830381600087803b15801561064a57600080fd5b505af115801561065e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610682919061197a565b9050609c60006106906110ce565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150556040518060c0016040528083815260200142815260200184426107149190611f7d565b81526020018573ffffffffffffffffffffffffffffffffffffffff16815260200161073d6110ce565b73ffffffffffffffffffffffffffffffffffffffff1681526020016001609c60006107666110ce565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506107ae9190611fd3565b815250609b600083815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a082015181600501559050505050505050565b609b6020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154905086565b600060019054906101000a900460ff166109285760008054906101000a900460ff1615610931565b6109306111a3565b5b610970576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096790611d48565b60405180910390fd5b60008060019054906101000a900460ff1615905080156109c0576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6109c86111b4565b6109d0611205565b81609960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610a325760008060016101000a81548160ff0219169083151502179055505b5050565b609a6020528060005260406000206000915054906101000a900460ff1681565b6000609b60008381526020019081526020016000206040518060c00160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201548152505090504281602001511115610b93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8a90611d88565b60405180910390fd5b4281604001511015610bda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd190611dc8565b60405180910390fd5b609b6000838152602001908152602001600020600080820160009055600182016000905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560058201600090555050610c9e610c696110ce565b82608001518360000151846060015173ffffffffffffffffffffffffffffffffffffffff1661125e909392919063ffffffff16565b609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e8260800151610ce96110ce565b856040518463ffffffff1660e01b8152600401610d0893929190611c00565b600060405180830381600087803b158015610d2257600080fd5b505af1158015610d36573d6000803e3d6000fd5b505050506000609c6000836080015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001609c6000856080015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050610dd29190611fd3565b81548110610de357610de261214c565b5b9060005260206000200154905080609c6000846080015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208360a0015181548110610e4a57610e4961214c565b5b9060005260206000200181905550609c6000836080015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480610eab57610eaa61211d565b5b60019003818190600052602060002001600090559055505050565b610ece6110ce565b73ffffffffffffffffffffffffffffffffffffffff16610eec6104c5565b73ffffffffffffffffffffffffffffffffffffffff1614610f42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3990611d68565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610fb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa990611ce8565b60405180910390fd5b610fbb816110dd565b50565b610fc66110ce565b73ffffffffffffffffffffffffffffffffffffffff16610fe46104c5565b73ffffffffffffffffffffffffffffffffffffffff161461103a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103190611d68565b60405180910390fd5b80606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fe529461c8529abc0e0fe7c5ee361f74fe22e0b7574df1fc0b7558a282091fb7882826040516110c2929190611c37565b60405180910390a15050565b60006110d86112e7565b905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006111ae30611323565b15905090565b600060019054906101000a900460ff16611203576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111fa90611e08565b60405180910390fd5b565b600060019054906101000a900460ff16611254576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124b90611e08565b60405180910390fd5b61125c611346565b565b6112e1846323b872dd60e01b85858560405160240161127f93929190611c00565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506113a7565b50505050565b600060186000369050101580156113035750611302336103bd565b5b1561131757601436033560601c905061131f565b339050611320565b5b90565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16611395576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138c90611e08565b60405180910390fd5b6113a56113a06110ce565b6110dd565b565b6000611409826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661146e9092919063ffffffff16565b90506000815111156114695780806020019051810190611429919061189d565b611468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145f90611e28565b60405180910390fd5b5b505050565b606061147d8484600085611486565b90509392505050565b6060824710156114cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c290611d28565b60405180910390fd5b6114d48561159a565b611513576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150a90611de8565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161153c9190611bce565b60006040518083038185875af1925050503d8060008114611579576040519150601f19603f3d011682016040523d82523d6000602084013e61157e565b606091505b509150915061158e8282866115bd565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b606083156115cd5782905061161d565b6000835111156115e05782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116149190611cc6565b60405180910390fd5b9392505050565b600061163761163284611ee9565b611ec4565b905082815260208101848484011115611653576116526121af565b5b61165e84828561207b565b509392505050565b600061167961167484611f1a565b611ec4565b905082815260208101848484011115611695576116946121af565b5b6116a084828561207b565b509392505050565b6000813590506116b781612450565b92915050565b6000813590506116cc81612467565b92915050565b6000815190506116e181612467565b92915050565b600082601f8301126116fc576116fb6121aa565b5b813561170c848260208601611624565b91505092915050565b600082601f83011261172a576117296121aa565b5b813561173a848260208601611666565b91505092915050565b6000813590506117528161247e565b92915050565b6000815190506117678161247e565b92915050565b600060208284031215611783576117826121b9565b5b6000611791848285016116a8565b91505092915050565b600080600080608085870312156117b4576117b36121b9565b5b60006117c2878288016116a8565b94505060206117d3878288016116a8565b93505060406117e487828801611743565b925050606085013567ffffffffffffffff811115611805576118046121b4565b5b611811878288016116e7565b91505092959194509250565b60008060408385031215611834576118336121b9565b5b6000611842858286016116a8565b9250506020611853858286016116bd565b9150509250929050565b60008060408385031215611874576118736121b9565b5b6000611882858286016116a8565b925050602061189385828601611743565b9150509250929050565b6000602082840312156118b3576118b26121b9565b5b60006118c1848285016116d2565b91505092915050565b600080600080608085870312156118e4576118e36121b9565b5b600085013567ffffffffffffffff811115611902576119016121b4565b5b61190e87828801611715565b945050602061191f878288016116a8565b935050604061193087828801611743565b925050606061194187828801611743565b91505092959194509250565b600060208284031215611963576119626121b9565b5b600061197184828501611743565b91505092915050565b6000602082840312156119905761198f6121b9565b5b600061199e84828501611758565b91505092915050565b6119b081612007565b82525050565b6119bf81612019565b82525050565b6119ce81612025565b82525050565b60006119df82611f4b565b6119e98185611f61565b93506119f981856020860161208a565b80840191505092915050565b6000611a1082611f56565b611a1a8185611f6c565b9350611a2a81856020860161208a565b611a33816121be565b840191505092915050565b6000611a4b602683611f6c565b9150611a56826121cf565b604082019050919050565b6000611a6e601183611f6c565b9150611a798261221e565b602082019050919050565b6000611a91602683611f6c565b9150611a9c82612247565b604082019050919050565b6000611ab4602e83611f6c565b9150611abf82612296565b604082019050919050565b6000611ad7602083611f6c565b9150611ae2826122e5565b602082019050919050565b6000611afa601983611f6c565b9150611b058261230e565b602082019050919050565b6000611b1d601383611f6c565b9150611b2882612337565b602082019050919050565b6000611b40601783611f6c565b9150611b4b82612360565b602082019050919050565b6000611b63601d83611f6c565b9150611b6e82612389565b602082019050919050565b6000611b86602b83611f6c565b9150611b91826123b2565b604082019050919050565b6000611ba9602a83611f6c565b9150611bb482612401565b604082019050919050565b611bc881612071565b82525050565b6000611bda82846119d4565b915081905092915050565b6000602082019050611bfa60008301846119a7565b92915050565b6000606082019050611c1560008301866119a7565b611c2260208301856119a7565b611c2f6040830184611bbf565b949350505050565b6000604082019050611c4c60008301856119a7565b611c5960208301846119b6565b9392505050565b6000604082019050611c7560008301856119a7565b8181036020830152611c878184611a05565b90509392505050565b6000602082019050611ca560008301846119b6565b92915050565b6000602082019050611cc060008301846119c5565b92915050565b60006020820190508181036000830152611ce08184611a05565b905092915050565b60006020820190508181036000830152611d0181611a3e565b9050919050565b60006020820190508181036000830152611d2181611a61565b9050919050565b60006020820190508181036000830152611d4181611a84565b9050919050565b60006020820190508181036000830152611d6181611aa7565b9050919050565b60006020820190508181036000830152611d8181611aca565b9050919050565b60006020820190508181036000830152611da181611aed565b9050919050565b60006020820190508181036000830152611dc181611b10565b9050919050565b60006020820190508181036000830152611de181611b33565b9050919050565b60006020820190508181036000830152611e0181611b56565b9050919050565b60006020820190508181036000830152611e2181611b79565b9050919050565b60006020820190508181036000830152611e4181611b9c565b9050919050565b6000602082019050611e5d6000830184611bbf565b92915050565b600060c082019050611e786000830189611bbf565b611e856020830188611bbf565b611e926040830187611bbf565b611e9f60608301866119a7565b611eac60808301856119a7565b611eb960a0830184611bbf565b979650505050505050565b6000611ece611edf565b9050611eda82826120bd565b919050565b6000604051905090565b600067ffffffffffffffff821115611f0457611f0361217b565b5b611f0d826121be565b9050602081019050919050565b600067ffffffffffffffff821115611f3557611f3461217b565b5b611f3e826121be565b9050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000611f8882612071565b9150611f9383612071565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611fc857611fc76120ee565b5b828201905092915050565b6000611fde82612071565b9150611fe983612071565b925082821015611ffc57611ffb6120ee565b5b828203905092915050565b600061201282612051565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156120a857808201518184015260208101905061208d565b838111156120b7576000848401525b50505050565b6120c6826121be565b810181811067ffffffffffffffff821117156120e5576120e461217b565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420616c6c6f77656420746f6b656e000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f53616c6520686173206e6f742073746172746564207965742e00000000000000600082015250565b7f43616c6c6572206973206e6f742061646d696e00000000000000000000000000600082015250565b7f53616c652068617320616c726561647920656e6465642e000000000000000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b61245981612007565b811461246457600080fd5b50565b61247081612019565b811461247b57600080fd5b50565b61248781612071565b811461249257600080fd5b5056fea2646970667358221220870f493152a3fc93d8b2739b6ab2b42acd9f8c112f21c278dd5059f2b9303c6b64736f6c63430008060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 130,
        "contract": "src/Sale.sol:PrimarySale",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 133,
        "contract": "src/Sale.sol:PrimarySale",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1728,
        "contract": "src/Sale.sol:PrimarySale",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "src/Sale.sol:PrimarySale",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 122,
        "contract": "src/Sale.sol:PrimarySale",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 2875,
        "contract": "src/Sale.sol:PrimarySale",
        "label": "trustedForwarder",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 2799,
        "contract": "src/Sale.sol:PrimarySale",
        "label": "_admins",
        "offset": 0,
        "slot": "102",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1443,
        "contract": "src/Sale.sol:PrimarySale",
        "label": "__gap",
        "offset": 0,
        "slot": "103",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 3076,
        "contract": "src/Sale.sol:PrimarySale",
        "label": "nft721",
        "offset": 0,
        "slot": "153",
        "type": "t_contract(IBeMetaPlace)3304"
      },
      {
        "astId": 3080,
        "contract": "src/Sale.sol:PrimarySale",
        "label": "allowedERC20Tokens",
        "offset": 0,
        "slot": "154",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 3098,
        "contract": "src/Sale.sol:PrimarySale",
        "label": "sales",
        "offset": 0,
        "slot": "155",
        "type": "t_mapping(t_uint256,t_struct(Sale)3093_storage)"
      },
      {
        "astId": 3103,
        "contract": "src/Sale.sol:PrimarySale",
        "label": "listings",
        "offset": 0,
        "slot": "156",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 3284,
        "contract": "src/Sale.sol:PrimarySale",
        "label": "__gap",
        "offset": 0,
        "slot": "157",
        "type": "t_array(t_uint256)50_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IBeMetaPlace)3304": {
        "encoding": "inplace",
        "label": "contract IBeMetaPlace",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Sale)3093_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct PrimarySale.Sale)",
        "numberOfBytes": "32",
        "value": "t_struct(Sale)3093_storage"
      },
      "t_struct(Sale)3093_storage": {
        "encoding": "inplace",
        "label": "struct PrimarySale.Sale",
        "members": [
          {
            "astId": 3082,
            "contract": "src/Sale.sol:PrimarySale",
            "label": "price",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 3084,
            "contract": "src/Sale.sol:PrimarySale",
            "label": "startAt",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 3086,
            "contract": "src/Sale.sol:PrimarySale",
            "label": "endAt",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 3088,
            "contract": "src/Sale.sol:PrimarySale",
            "label": "tokenAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 3090,
            "contract": "src/Sale.sol:PrimarySale",
            "label": "seller",
            "offset": 0,
            "slot": "4",
            "type": "t_address"
          },
          {
            "astId": 3092,
            "contract": "src/Sale.sol:PrimarySale",
            "label": "listingIndex",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}